{"version":3,"sources":["components/index.js","App.js","reportWebVitals.js","index.js"],"names":["TimerSegment","props","defaultDate","Date","setDate","getDate","state","days","hours","minutes","seconds","deadline","date","num","time","parse","this","setState","Math","floor","setInterval","getTimeUntil","counterStyle","timerStyle","labelStyle","style","padding","textAlign","height","background","color","marginBottom","display","justifyContent","flex","className","leadingZero","Component","App","marginTop","width","fontSize","border","margin","backgroundColor","textTransform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOA2EeA,E,kDAlDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAtBRC,YAAc,IAAIC,MAAK,IAAIA,MAAOC,SAAQ,IAAID,MAAOE,UAAU,IAuB7D,EAAKC,MAAQ,CACXC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,SAAU,EAAKV,MAAMW,KAAO,EAAKX,MAAMW,KAAO,EAAKV,aAPpC,E,wDAnBPW,GACV,OAAOA,EAAM,GAAK,IAAMA,EAAMA,I,mCAGnBF,GACX,IAAMG,EACJX,KAAKY,MAAMJ,GAAYR,KAAKY,MAAM,IAAIZ,MAExC,GAAIW,EAAO,EACTE,KAAKC,SAAS,CAAEV,KAAM,EAAGC,MAAO,EAAGC,QAAS,EAAGC,QAAS,QACnD,CACL,IAAMA,EAAUQ,KAAKC,MAAOL,EAAO,IAAQ,IACrCL,EAAUS,KAAKC,MAAOL,EAAO,IAAO,GAAM,IAC1CN,EAAQU,KAAKC,MAAOL,EAAI,KAAuB,IAC/CP,EAAOW,KAAKC,MAAML,EAAI,OAC5BE,KAAKC,SAAS,CAAEV,OAAMC,QAAOC,UAASC,iB,yDAgBrB,IAAD,OAClBU,aAAY,kBAAM,EAAKC,aAAa,EAAKf,MAAMK,YAAW,O,+BAGlD,IAAD,EACmCK,KAAKV,MAAvCC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,QAASC,EADvB,EACuBA,QAC1BY,EAAeN,KAAKf,MAAMqB,aAAeN,KAAKf,MAAMqB,aAAgB,GACpEC,EAAaP,KAAKf,MAAMsB,WAAaP,KAAKf,MAAMsB,WAAa,GAC7DC,EAAaR,KAAKf,MAAMuB,WAAaR,KAAKf,MAAMuB,WAAa,GAEjE,OACE,qBAAKC,MAAOF,EAAZ,SACI,sBAAKE,MAAO,CAACC,QAAQ,MAAMC,UAAU,SAAUC,OAAO,OAAOC,WAAW,QAAxE,UACE,mBAAGJ,MAAO,CAACK,MAAON,EAAWM,MAAQN,EAAWM,MAAQ,OAAQC,aAAa,OAA7E,uBACA,sBAAKN,MAAO,CAACO,QAAQ,OAAQC,eAAe,UAA5C,UACI,sBAAKR,MAAO,CAACS,KAAK,GAAlB,UACI,oBAAIC,UAAU,gBAAgBV,MAAOH,EAArC,SAAoDN,KAAKoB,YAAY7B,KACrE,mBAAGkB,MAAOD,EAAV,qBAEJ,sBAAKC,MAAO,CAACS,KAAK,GAAlB,UACI,oBAAIC,UAAU,gBAAgBV,MAAOH,EAArC,SAAoDN,KAAKoB,YAAY5B,KACrE,mBAAGiB,MAAOD,EAAV,sBAEJ,sBAAKC,MAAO,CAACS,KAAK,GAAlB,UACI,oBAAIC,UAAU,gBAAgBV,MAAOH,EAArC,SAAoDN,KAAKoB,YAAY3B,KACrE,mBAAGgB,MAAOD,EAAV,wBAEJ,sBAAKC,MAAO,CAACS,KAAK,GAAlB,UACI,oBAAIC,UAAU,gBAAgBV,MAAOH,EAArC,SAAoDN,KAAKoB,YAAY1B,KACrE,mBAAGe,MAAOD,EAAV,oC,GAhEOa,aCWZC,MAVf,SAAarC,GACT,OACI,cAAC,EAAD,CACAW,KAAK,sBACLW,WAAY,CAACgB,UAAU,OAAQC,MAAM,OACrClB,aAAc,CAACmB,SAAS,OAAQX,MAAM,QAASY,OAAO,gBAAiBhB,QAAQ,OAAQiB,OAAO,MAAOC,gBAAgB,OACrHpB,WAAY,CAACM,MAAM,OAAOW,SAAS,OAAQI,cAAc,gBCGlDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2358e3ad.chunk.js","sourcesContent":["import React,  { Component, Fragment } from \"react\";\n\nclass TimerSegment extends Component {\n\n  defaultDate = new Date(new Date().setDate(new Date().getDate()+1))\n\n  leadingZero(num) {\n    return num < 10 ? \"0\" + num : num;\n  }\n\n  getTimeUntil(deadline) {\n    const time =\n      Date.parse(deadline) - Date.parse(new Date());\n\n    if (time < 0) {\n      this.setState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    } else {\n      const seconds = Math.floor((time / 1000) % 60);\n      const minutes = Math.floor((time / 1000 / 60) % 60);\n      const hours = Math.floor((time / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\n      this.setState({ days, hours, minutes, seconds });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      deadline: this.props.date ? this.props.date : this.defaultDate\n      // deadline: this.props.date ? this.props.date : \"April, 6, 2019\"\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => this.getTimeUntil(this.state.deadline), 1000);\n  }\n\n  render() {\n    const { days, hours, minutes, seconds } = this.state;\n    let counterStyle = this.props.counterStyle ? this.props.counterStyle  : {};\n    let timerStyle = this.props.timerStyle ? this.props.timerStyle : {};\n    let labelStyle = this.props.labelStyle ? this.props.labelStyle : {};\n\n    return (\n      <div style={timerStyle} >\n          <div style={{padding:'0px',textAlign:'center', height:'100%',background:'none'}}  >\n            <p style={{color: labelStyle.color ? labelStyle.color : 'grey', marginBottom:'0px'}}>STARTS IN</p>\n            <div style={{display:'flex', justifyContent:'center'}}>\n                <div style={{flex:1}}>\n                    <h1 className=\"timer-counter\" style={counterStyle}>{this.leadingZero(days)}</h1>\n                    <p style={labelStyle}>Days</p>\n                </div>\n                <div style={{flex:1}}>\n                    <h1 className=\"timer-counter\" style={counterStyle}>{this.leadingZero(hours)}</h1>\n                    <p style={labelStyle}>Hours</p>\n                </div>\n                <div style={{flex:1}}>\n                    <h1 className=\"timer-counter\" style={counterStyle}>{this.leadingZero(minutes)}</h1>\n                    <p style={labelStyle}>Minutes</p>\n                </div>\n                <div style={{flex:1}}>\n                    <h1 className=\"timer-counter\" style={counterStyle}>{this.leadingZero(seconds)}</h1>\n                    <p style={labelStyle}>Seconds</p>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n  }\n}\n\nexport default TimerSegment;\n","import React,  { Component, Fragment } from \"react\";\nimport Counter from './components';\n\nfunction App(props){\n    return (\n        <Counter \n        date=\"2021-01-10T14:48:00\" \n        timerStyle={{marginTop:'10px', width:'20%'}} \n        counterStyle={{fontSize:'15px', color:'white', border:'1px solid red', padding:'10px', margin:'5px', backgroundColor:'red'}} \n        labelStyle={{color:'grey',fontSize:'12px', textTransform:'uppercase'}}\n    />\n    )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}